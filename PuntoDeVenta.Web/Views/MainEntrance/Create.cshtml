@model NewOrderView

@{ ViewData["Title"] = "Create"; }

<h2>Create</h2>

<p>
    <a asp-action="AddProduct" class="btn btn-outline-success">Add Product</a>
    <button type="button" class="btn btn-outline-primary" data-toggle="modal" data-target="#confirmDialog">Confirm Order</button>
</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="panel panel-primary">
            <div class="panel-heading">Panel Orders</div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <div class="form-group">
                                <label asp-for="idState" class="control-label"></label>
                                <select asp-for="idState" asp-items="Model.ComboProdStates" class="form-control"></select>
                                <span asp-validation-for="idState" class="text-danger"></span>
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class='input-group date' id='datepicker' style="width:280px">
                                    @Html.EditorFor(model => model.Date, new
                                    {
                                        htmlAttributes = new { @class = "form-control" }
                                    })
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save Orders" class="btn btn-outline-primary" />
                                @Html.ActionLink("Add Product", "AddProduct", "MainEntrance", new { }, new { @class = "dialog-window btn btn-warning" })
                                @Html.ActionLink("Back to Orders", "Index", new { }, new { @class = "btn btn-outline-dark" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<hr />
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Order</h3>
            </div>
            <div class="panel-body">
                <table class="table table-hover table-striped" id="MyTable" style="width:100%">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Details[0].Product.Nombre)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Details[0].UnitCost)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Details[0].Quantity)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Details[0].Value)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Details)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Product.Nombre)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UnitCost)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Quantity)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Value)
                                </td>
                                <td>
                                    <a asp-action="Increase" asp-route-id="@item.TmpDetailenterId" class="btn btn-outline-warning"><i class="fa fa-plus"></i></a>
                                    <a asp-action="Decrease" asp-route-id="@item.TmpDetailenterId" class="btn btn-outline-info"><i class="fa fa-minus"></i></a>
                                    <button data-id="@item.TmpDetailenterId" class="btn btn-outline-danger deleteItem" data-toggle="modal" data-target="#deleteDialog">Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Confirm Order-->
<div class="modal fade" id="confirmDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Order</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Do you want to confirm the order?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-outline-success" id="btnYes">Save changes</button>
            </div>
        </div>
    </div>
</div>

<!--Delete Item-->
<div class="modal fade" id="deleteDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete Item</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Do you want to delete the product from order?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-primary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-outline-danger" id="btnYesDelete">Delete</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="AddProduct" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true" data-backdrop="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" ariahidden="true">&times;</button>
                <h2 class="modal-title"></h2>
            </div>
            <div class="modal-body"><div class="te">Please wait...</div></div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script>
    $(document).ready(function () {

            $('#MyTable').DataTable();

            // Confirm Order
            $("#btnYes").click(function () {
                window.location.href = '/Orders/ConfirmOrder';
            });

            // Delete item
            var item_to_delete;

            $('.deleteItem').click((e) => {
                item_to_delete = e.currentTarget.dataset.id;
            });

            $("#btnYesDelete").click(function () {
                window.location.href = '/Orders/DeleteItem/' + item_to_delete;
            });

        $("body").on("click", "a.dialog-window", null, function (e) {
            e.preventDefault();
            var $link = $(this);
            var title = $link.text();
            $('#AddProduct .modal-title').html(title);
            var url = $(this).attr('href');
            if (url.indexOf('#') == 0) {
                $('#AddProduct').modal('show');
            }
            else {
                $.get(url, function (data) {
                    $('#AddProduct .te').html(data);
                    $('#AddProduct').modal();
                }).success(function () { $('input:text:visible:first').focus(); });
            }
        });


        });</script>
}